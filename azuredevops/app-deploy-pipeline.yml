trigger: none
  # branches:
  #   include:
  #     - main

variables:
  azureSubscription: 'arm-svc-con'
  acrName: 'acronlinestoredevuksouth001'             # without .azurecr.io
  aksCluster: 'aks-onlinestore-dev-uksouth-001'
  aksResourceGroup: 'rg-onlinestore-dev-uksouth-001'
  helmChartPath: './helmchart/'
  namespace: "default"

stages:
# - stage: Build
#   jobs:
#   - job: BuildAndPush
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: Checkout@1

#     - task: Docker@2
#       inputs:
#         containerRegistry: '$(azureSubscription)'
#         repository: '$(acrName).azurecr.io/$(imageName)'
#         command: 'buildAndPush'
#         Dockerfile: '**/Dockerfile'
#         tags: |
#           $(Build.BuildId)

# - stage: Deploy
#   # dependsOn: Build
#   jobs:
#   - job: HelmDeploy
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: AzureCLI@2
#       inputs:
#         azureSubscription: $(azureSubscription)
#         scriptType: bash
#         scriptLocation: inlineScript
#         inlineScript: |
#           echo "Getting AKS credentials..."
#           az aks get-credentials --name $(aksCluster) --resource-group $(aksResourceGroup) --overwrite-existing

#           echo "Installing Helm chart..."
#           helm upgrade --install myapp $(helmChartPath) \
#             --namespace default

- stage: Deploy
  # dependsOn: Build
  jobs:
  - job: HelmDeploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: Get AKS Credentials
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Getting AKS credentials..."
          az aks get-credentials --name $(aksCluster) --resource-group $(aksResourceGroup) --overwrite-existing

    - task: HelmDeploy@1
      displayName: Helm Upgrade/Install
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: $(azureSubscription)
        azureResourceGroup: $(aksResourceGroup)
        kubernetesCluster: $(aksCluster)
        namespace: $(namespace)
        command: upgrade
        chartType: FilePath
        chartPath: '$(helmChartPath)'
        releaseName: 'storeapp'
        install: true
        waitForExecution: true